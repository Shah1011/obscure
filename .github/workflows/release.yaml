name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          registry-url: "https://registry.npmjs.org"

      - name: Extract version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Update package.json version
        run: |
          # Update version using Node.js to avoid npm version conflicts
          node -e "
            const fs = require('fs');
            const pkg = JSON.parse(fs.readFileSync('package.json', 'utf8'));
            pkg.version = '${{ steps.version.outputs.VERSION }}';
            fs.writeFileSync('package.json', JSON.stringify(pkg, null, 2) + '\n');
            console.log('Updated package.json version to:', pkg.version);
          "

      - name: Build binaries
        run: |
          # Build for multiple platforms
          GOOS=windows GOARCH=amd64 go build -o obscure-windows-amd64.exe .
          GOOS=linux GOARCH=amd64 go build -o obscure-linux-amd64 .
          GOOS=darwin GOARCH=amd64 go build -o obscure-darwin-amd64 .
          GOOS=darwin GOARCH=arm64 go build -o obscure-darwin-arm64 .

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            obscure-windows-amd64.exe
            obscure-linux-amd64
            obscure-darwin-amd64
            obscure-darwin-arm64
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify package before publish
        run: |
          echo "Package info:"
          npm pack --dry-run
          echo "Current version in package.json:"
          node -e "console.log(require('./package.json').version)"

      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
